[{"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\reportWebVitals.ts":"1","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoForm.tsx":"2","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\index.tsx":"3","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoList.tsx":"4","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\App.tsx":"5","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoItem.tsx":"6","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\serviceWorker.ts":"7"},{"size":425,"mtime":1606149272450,"results":"8","hashOfConfig":"9"},{"size":1190,"mtime":1610197508475,"results":"10","hashOfConfig":"9"},{"size":556,"mtime":1610201716518,"results":"11","hashOfConfig":"9"},{"size":767,"mtime":1610184165310,"results":"12","hashOfConfig":"9"},{"size":2052,"mtime":1610201342710,"results":"13","hashOfConfig":"9"},{"size":1051,"mtime":1610183138846,"results":"14","hashOfConfig":"9"},{"size":6284,"mtime":1610201724803,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ha3ya",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\reportWebVitals.ts",[],"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoForm.tsx",["33"],"import React, { useState, useRef, useEffect } from \"react\"\r\nimport shortid from \"shortid\"\r\nimport { TodoFormInterface, TodoInterface } from \"../Interfaces/interface\"\r\n\r\nconst TodoForm = (props: TodoFormInterface) => {\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const [values, setValues] = useState(\"\")\r\n\r\n    function hanldeInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setValues(event.target.value)\r\n    }\r\n\r\n    function handleInputEnter(event: React.KeyboardEvent) {\r\n        if (event.key === \"Enter\") {\r\n            const newTodo: TodoInterface = {\r\n                id: shortid.generate(),\r\n                name: values,\r\n                isCompleted: false\r\n            }\r\n            props.handleTodoCreate(newTodo)\r\n\r\n            if (inputRef && inputRef.current) {\r\n                inputRef.current.value = \"\"\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"todo-form\">\r\n            <input ref={inputRef} type=\"text\" placeholder=\"Enter new Todo\" onChange={event => hanldeInputChange(event)}\r\n                onKeyPress={event => handleInputEnter(event)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default TodoForm","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\index.tsx",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();","C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoList.tsx",[],["35","36"],"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\App.tsx",[],"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\Components\\TodoItem.tsx",[],"C:\\Users\\HP\\Desktop\\Programming Practice\\React Practice\\todo_with_medium\\src\\serviceWorker.ts",[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":35,"nodeType":"39","messageId":"40","endLine":1,"endColumn":44},{"ruleId":"37","severity":1,"message":"41","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":23},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'reportWebVitals' is defined but never used.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]